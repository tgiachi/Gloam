name: Deploy Documentation

on:
  push:
    branches: [ main ]  # Trigger on main branch pushes
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper git operations

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Install DocFX
      run: dotnet tool install -g docfx

    - name: Build solution
      run: dotnet build Gloam.slnx --configuration Release

    - name: Generate API documentation
      run: |
        cd docs
        docfx metadata

    - name: Build documentation site
      run: |
        cd docs
        docfx build --output _site

    - name: Add .nojekyll file
      run: touch docs/_site/.nojekyll

    - name: Create CNAME file for GitHub Pages
      run: echo "tgiachi.github.io" > docs/_site/CNAME

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/_site

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Create deployment notes
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          DEPLOY_TYPE="ðŸ“¦ Release"
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "ðŸ“š Documentation deployed for release ${TAG_NAME}" >> deployment_notes.md
          echo "" >> deployment_notes.md
          echo "ðŸ”— View documentation: ${{ steps.deployment.outputs.page_url }}" >> deployment_notes.md
          echo "" >> deployment_notes.md
          echo "Changes in this release:" >> deployment_notes.md
          git log --oneline --pretty=format="- %s" HEAD~1..HEAD >> deployment_notes.md
        else
          DEPLOY_TYPE="ðŸ”„ Development"
          echo "ðŸ“š Development documentation updated" >> deployment_notes.md
          echo "" >> deployment_notes.md
          echo "ðŸ”— View documentation: ${{ steps.deployment.outputs.page_url }}" >> deployment_notes.md
          echo "" >> deployment_notes.md
          echo "Latest commits:" >> deployment_notes.md
          git log --oneline -5 >> deployment_notes.md
        fi

    - name: Upload deployment notes
      uses: actions/upload-artifact@v4
      with:
        name: deployment-notes
        path: deployment_notes.md
        retention-days: 30