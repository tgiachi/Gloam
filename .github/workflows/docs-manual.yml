name: Deploy Documentation (Manual)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (e.g., v1.0.0, latest)'
        required: true
        default: 'latest'
      environment:
        description: 'Target environment'
        required: false
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-manual"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Install DocFX
      run: dotnet tool install -g docfx

    - name: Build solution
      run: dotnet build Gloam.slnx --configuration Release

    - name: Generate API documentation
      run: |
        cd docs
        docfx metadata

    - name: Build documentation site
      run: |
        echo "üîß Building documentation..."
        cd docs
        if ! docfx build --output _site; then
          echo "‚ùå DocFX build failed"
          exit 1
        fi
        echo "‚úÖ DocFX build completed successfully"

    - name: Verify documentation build
      run: |
        cd docs/_site
        if [ ! -f "index.html" ]; then
          echo "‚ùå Error: index.html not found in _site/"
          exit 1
        fi
        echo "‚úÖ Found index.html and $(ls *.html | wc -l) HTML files"
        echo "üìÅ Site structure:"
        ls -la | head -10

    - name: Add deployment info
      run: |
        cd docs/_site
        echo "<!-- Deployed: $(date) | Version: ${{ inputs.version }} | Environment: ${{ inputs.environment }} -->" > .deployment-info.html

    - name: Add .nojekyll file
      run: touch docs/_site/.nojekyll

    - name: Create CNAME file for GitHub Pages
      run: echo "tgiachi.github.io" > docs/_site/CNAME

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Show deployment summary
      run: |
        echo "üìä Deployment Summary:"
        echo "- Version: ${{ inputs.version }}"
        echo "- Environment: ${{ inputs.environment }}"
        echo "- Files to deploy: $(find docs/_site -type f | wc -l)"
        echo "- Site size: $(du -sh docs/_site | cut -f1)"
        echo "- Main files:"
        ls -la docs/_site/ | grep -E '\.(html|css|js)$' | head -5

    - name: Prepare artifact directory
      run: |
        # Create temp directory for artifact
        mkdir -p temp-artifact

        # Check if _site has content before copying
        if [ ! -d "docs/_site" ] || [ ! "$(ls -A docs/_site)" ]; then
          echo "‚ùå Error: docs/_site is empty or does not exist"
          exit 1
        fi

        # Copy all content from _site to temp directory
        cp -r docs/_site/* temp-artifact/ 2>/dev/null || true

        # Verify the copy was successful
        if [ ! "$(ls -A temp-artifact)" ]; then
          echo "‚ùå Error: Failed to copy content to temp-artifact"
          exit 1
        fi

        # Verify the copy
        echo "üîç Deployment Content Check:"
        echo "- Total files: $(find temp-artifact/ -type f | wc -l)"
        echo "- HTML files: $(find temp-artifact/ -name "*.html" | wc -l)"
        echo "- Index exists: $([ -f temp-artifact/index.html ] && echo '‚úÖ YES' || echo '‚ùå NO')"

        if [ -f "temp-artifact/index.html" ]; then
          echo "- Index size: $(stat -f%z temp-artifact/index.html) bytes"
          echo "- First few lines:"
          head -3 temp-artifact/index.html
        fi

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: temp-artifact/
        retention-days: 1

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Create deployment summary
      run: |
        echo "## üìö Documentation Deployment Summary" >> deployment-summary.md
        echo "" >> deployment-summary.md
        echo "**Version:** ${{ inputs.version }}" >> deployment-summary.md
        echo "**Environment:** ${{ inputs.environment }}" >> deployment-summary.md
        echo "**Deployed at:** $(date)" >> deployment-summary.md
        echo "**URL:** ${{ steps.deployment.outputs.page_url }}" >> deployment-summary.md
        echo "" >> deployment-summary.md
        echo "### Recent Changes" >> deployment-summary.md
        echo "" >> deployment-summary.md
        git log --oneline -10 >> deployment-summary.md

    - name: Upload deployment summary
      uses: actions/upload-artifact@v4
      with:
        name: deployment-summary
        path: deployment-summary.md
        retention-days: 30